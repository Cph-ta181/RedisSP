version: '3'

services:
  redis:
    image: redis:5.0.0
    container_name: master
    ports:
      - "6379:6379"
    networks:
      - redis-replication

  redis-slave:
    image: redis:5.0.0
    container_name: slave
    ports:
      - "6380:6379"
    command: sh -c "redis-server --slaveof master 6379 && echo sentinel monitor master 127.0.0.1 6379 1 > sentinel.conf && echo sentinel down-after-milliseconds master 10000 >> sentinel.conf && echo sentinel failover-timeout master 20000 >> sentinel.conf && echo sentinel parallel-syncs master 1 >> sentinel.conf && cat sentinel.conf && redis-sentinel sentinel.conf"
    depends_on:
      - redis
    networks:
      - redis-replication

  redis-slave2:
    image: redis:5.0.0
    container_name: slave2
    ports:
      - "6381:6379"
    command: sh -c "redis-server --slaveof master 6379 && echo sentinel monitor master 127.0.0.1 6379 1 > sentinel.conf && echo sentinel down-after-milliseconds master 10000 >> sentinel.conf && echo sentinel failover-timeout master 20000 >> sentinel.conf && echo sentinel parallel-syncs master 1 >> sentinel.conf && cat sentinel.conf && redis-sentinel sentinel.conf"
    depends_on:
      - redis
    networks:
      - redis-replication
  
  redis-sentinel:
    image: redis:5.0.0
    container_name: sentinel
    #command: redis-sentinel C:/Users/tomst/Documents/dev/Docker/redis2/sentinel.conf
    command: sh -c "echo sentinel monitor master 127.0.0.1 6379 1 > sentinel.conf && echo sentinel down-after-milliseconds master 10000 >> sentinel.conf && echo sentinel failover-timeout master 20000 >> sentinel.conf && echo sentinel parallel-syncs master 1 >> sentinel.conf && cat sentinel.conf && redis-sentinel sentinel.conf"
    networks:
    - redis-replication

networks:
  redis-replication:
    driver: bridge